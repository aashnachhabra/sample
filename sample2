{readyState: 4, getResponseHeader: ƒ, getAllResponseHeaders: ƒ, setRequestHeader: ƒ, overrideMimeType: ƒ, …}abort: ƒ ( statusText )always: ƒ ()catch: ƒ ( fn )done: ƒ ()fail: ƒ ()getAllResponseHeaders: ƒ ()getResponseHeader: ƒ ( key )overrideMimeType: ƒ ( type )pipe: ƒ ( /* fnDone, fnFail, fnProgress */ )progress: ƒ ()promise: ƒ ( obj )readyState: 4responseText: "\n\n\n<!doctype html>\n<html>\n<head>\n\t<meta chsetRequestHeader: ƒ ( name, value )length: 2name: "setRequestHeader"prototype: {}arguments: (...)caller: (...)[[FunctionLocation]]: jquery-3.5.1.js:9461[[Prototype]]: ƒ ()[[Scopes]]: Scopes[3]state: ƒ ()status: 200statusCode: ƒ ( map )statusText: "parsererror"then: ƒ ( onFulfilled, onRejected, onProgress )[[Prototype]]: Object
name: Get Changed Files on PR Merge
 
on:
  pull_request:
    types:
      - closed
 
jobs:
  get-changed-files:
    if: github.event.pull_request.merged == true
    runs-on: uhg-runner
 
    steps:
      # Step 1: Authenticate with GitHub using PAT
      - name: Authenticate with GitHub
        run: echo "${{ secrets.GH_PAT }}" | gh auth login --with-token
      
      # Step 2: Check out the repository
      - name: Checkout Repository
        uses: actions/checkout@v3
 
      # Step 3: Get the files changed in the merged PR
      - name: Fetch Changed Files
        id: changed-files
        run: |
          # Get the PR number
          PR_NUMBER=$(echo "${{ github.event.pull_request.number }}")
 
          # Get the list of changed files for the PR
          FILES=$(gh pr view $PR_NUMBER --json files --jq '.files[].path')
 
          # Convert the file paths to absolute GitHub paths
          REPO_URL="https://github.com/${{ github.repository }}"
          ABSOLUTE_PATHS=$(echo "${FILES}" | jq -R -s -c 'split("\n") | map(select(length > 0) | env.REPO_URL + "/" + .)')
 
          # Output the changed files
          echo "${ABSOLUTE_PATHS}" > changed_files.json
          echo "::set-output name=files::${ABSOLUTE_PATHS}"
 
      # Step 4: Print the changed files
      - name: Display Changed Files
        run: |
          echo "Changed files:"
          cat changed_files.json
 
      # Step 5: Make an API call with the file paths
      - name: Send Changed Files to API
        run: |
          curl -X POST http://localhost:8900/api/documents/modifiedFilePathsFromGithub \
          -H "Content-Type: application/json" \
          -d @changed_files.json
