import pandas as pd
import requests

# Load the Excel file
file_path = "/Users/achhab16/Downloads/BeCCA Testing March 2025.xlsx"
df = pd.read_excel(file_path, engine='openpyxl')

# API URL
api_url = "http://localhost:8080/deepeval/geval"

# Function to evaluate each row
def evaluate_row(row):
    request_data = {
        "question": row["request"],
        "llm_genrated_ans": row["response"],
        "ground_ans": row["response"]
    }
    try:
        response = requests.post(api_url, json=request_data)
        response_data = response.json()
        score = response_data.get("score", 0)  # Default to 0 if no score
        reason = response_data.get("reason", "")  # Default to empty string if no reason
        result = "Passed" if score >= 0.7 else "Failed"
        return pd.Series([result, score, reason])
    except requests.RequestException as e:
        print(f"Error processing row {row.name}: {e}")
        return pd.Series(["Error", 0, ""])

# Apply function to each row and create new columns
df[["Deepeval test", "Deepeval score", "Reason"]] = df.apply(evaluate_row, axis=1)

# Save the updated file
output_file = "BeCCA Testing March 2025_deepeval_test.xlsx"
df.to_excel(output_file, index=False)
print(f"Updated Excel file saved as {output_file}")

this is a small project i created to do deepeval scoring based on the provided data in excel
i need a ui for this where ui will have 3 fields, 1 to upload the excel for test questions, 2 to give endpoint for llm, 3 to set threshold ie if score is above what value between 0-1 that we should consider it passed.
now llm response should come from the endpoint given in the ui where payload is in form of text and is the question that we will pick from the excel which has column name as "question" and ground answer also we pick from excel which has column name "expected_answer"
llm response should be a call to the post api that we will get from ui and response from that api is in this format {
    "content": "{\"candidates\":[{\"avgLogprobs\":-0.14823703108162717,\"content\":{\"parts\":[{\"text\":\"Based on the provided code, bundle match is a process that attempts to find an existing \\\"Benefit Bundle Option\\\" that satisfies the criteria specified in a `BundleMatchInput` object.  If no matching bundle option is found, and the `doAssembly` flag is true, a new bundle option is created (`assembleBenefitBundle`).  The process involves validating the input, looking up external IDs (`getAllExternalIDLookupResults`), and applying various filters (`findOptionsWithMatchingPlans`) to find the best match. The result is encapsulated in a `BundleMatchResult` object.\\n\"}],\"role\":\"model\"},\"finishReason\":\"STOP\"}],\"modelVersion\":\"gemini-1.5-flash\",\"usageMetadata\":{\"candidatesTokenCount\":116,\"candidatesTokensDetails\":[{\"modality\":\"TEXT\",\"tokenCount\":116}],\"promptTokenCount\":48775,\"promptTokensDetails\":[{\"modality\":\"TEXT\",\"tokenCount\":48775}],\"totalTokenCount\":48891}}\n",
    "closeDocsforUi": [
        "BundleOptionMatchServiceImpl.java",
        "BundleMatchResult.java",
        "BundleOptionMatchUtilityController.java"
    ]
}
i need only the part in text and send it llm_genrated_ans
need to do it for all the rows in uploaded excel
after that the excel file that the above code generates that should open in the ui
backend can be python and frontend make using react. Please make frontend beautiful and well structured yet not too much happening. give code structure and runnning instructions as well







