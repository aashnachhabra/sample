html

<div>
    <div class="row">
        <div class="button-container mb-2">
            <button class="btn btn-outline-success btn-sm float-end" (click)="openMappingModal()">Add Mapping</button>
        </div>
    </div>

    <div class="row">
        <app-table title="Category and Sub-Category Mapping"
            [records]="(subWorkTypeGroupStore.subWorkTypeGroup$ | async) ?? []"
            [table]="tableSettings"
            [showTitle]="true" [editable]="true" [paginate]="true"></app-table>
    </div>
</div>


js
import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgbModal, NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';
import { FontAwesomeModule } from '@fortawesome/angular-fontawesome';
import { SharedModule } from 'src/app/shared/shared.module';
import { TableSettings } from 'src/app/shared/models/table.interface';
import { Subscription } from 'rxjs';
import { SpinnerService } from 'src/app/shared/services/spinner.service';
import { ToastService } from 'src/app/shared/services/toast.service';
import { CategorySubCategoryModalComponent } from './category-sub-category-modal/category-sub-category-modal.component';
import { SubWorkTypeGroupStoreService } from 'src/app/shared/services/subWorkTypeGroup/sub-work-type-group-store.service';

@Component({
  selector: 'app-category-subcategory',
  standalone: true,
  imports: [
    CommonModule,
    FontAwesomeModule,
    SharedModule,
    NgbPaginationModule,
  ],
  templateUrl: './category-subcategory.component.html',
  styleUrls: ['./category-subcategory.component.scss']
})
export class CategorySubcategoryComponent {
  loadingSubscription: Subscription = new Subscription;
  tableSettings: TableSettings = {
    tableClass: ['table', 'table-striped', 'caption-top'],
    headerClass: ['table-light'],
    column: [
      {
        primaryKey: 'groupName',
        header: 'Category'
      },
      {
        primaryKey: 'subWorkTypeName',
        header: 'Sub Category'
      }
    ]
  }
  constructor(
    public modalService: NgbModal,
    private spinnerService: SpinnerService,
    private toast: ToastService,
    public subWorkTypeGroupStore: SubWorkTypeGroupStoreService
  ) { 
    this.loadingSubscription = this._subscribeToLoading();
  }
  ngOnInit(): void {
    this._fetchAllMappings();
  }

  openMappingModal() {
    this.modalService.open(CategorySubCategoryModalComponent);
  }
  private _fetchAllMappings() {
    this.subWorkTypeGroupStore.findAllSubWorkTypeGroups().subscribe({
      error: () => {
        this.toast.showDanger("Something went wrong. Please refresh the page and try again.");
      }
    });
  }
  private _subscribeToLoading() {
    return this.subWorkTypeGroupStore.loading$.subscribe((loading) => {
      if(loading) {
        this.spinnerService.showSpinner();
      } else {
        this.spinnerService.hideSpinner();
      }
    })
  }

}

i want my table to show records in ascending order of groupName
