import streamlit as st
import os
from dotenv import load_dotenv
from PyPDF2 import PdfReader
from langchain.text_splitter import CharacterTextSplitter
from langchain.embeddings import HuggingFaceInstructEmbeddings
from langchain.vectorstores import FAISS
from langchain.chat_models import ChatOpenAI
from langchain.memory import ConversationBufferMemory
from langchain.chains import ConversationalRetrievalChain
from htmlTemplates import css, bot_template, user_template
from langchain.llms import HuggingFaceHub
from sentence_transformers import SentenceTransformer

load_dotenv()

def get_pdf_text(pdf_docs):
    text = ""
    for pdf in pdf_docs:
        pdf_reader = PdfReader(pdf)
        for page in pdf_reader.pages:
            text += page.extract_text()
    return text

def get_text_chunks(text):
    text_splitter = CharacterTextSplitter(
        separator="\n",
        chunk_size=1000,
        chunk_overlap=200,
        length_function=len
    )
    chunks = text_splitter.split_text(text)
    return chunks

def get_vectorstore(text_chunks):
    hf_token = os.getenv("HUGGINGFACEHUB_API_TOKEN")
    if not hf_token:
        raise ValueError("HUGGINGFACEHUB_API_TOKEN environment variable not set")
    model = SentenceTransformer("hkunlp/instructor-xl")
    embeddings = model.encode(text_chunks)
    vectorstore = FAISS.from_texts(texts=text_chunks, embedding=embeddings)
    return vectorstore

def get_conversation_chain(vectorstore):
    llm = HuggingFaceHub(repo_id="google/flan-t5-xxl", model_kwargs={"temperature":0.5, "max_length":512})
    memory = ConversationBufferMemory(
        memory_key='chat_history', return_messages=True)
    conversation_chain = ConversationalRetrievalChain.from_llm(
        llm=llm,
        retriever=vectorstore.as_retriever(),
        memory=memory
    )
    return conversation_chain

def handle_userinput(user_question):
    response = st.session_state.conversation({'question': user_question})
    st.session_state.chat_history = response['chat_history']

    for i, message in enumerate(st.session_state.chat_history):
        if i % 2 == 0:
            st.write(user_template.replace(
                "{{MSG}}", message.content), unsafe_allow_html=True)
        else:
            st.write(bot_template.replace(
                "{{MSG}}", message.content), unsafe_allow_html=True)

def main():
    load_dotenv()
    st.set_page_config(page_title="Chat with multiple PDFs",
                       page_icon=":books:")
    st.write(css, unsafe_allow_html=True)

    if "conversation" not in st.session_state:
        st.session_state.conversation = None
    if "chat_history" not in st.session_state:
        st.session_state.chat_history = None

    st.header("Chat with multiple PDFs :books:")
    user_question = st.text_input("Ask a question about your documents:")
    if user_question:
        handle_userinput(user_question)

    with st.sidebar:
        st.subheader("Your documents")
        pdf_docs = st.file_uploader(
            "Upload your PDFs here and click on 'Process'", accept_multiple_files=True)
        if st.button("Process"):
            with st.spinner("Processing"):
                # get pdf text
                raw_text = get_pdf_text(pdf_docs)

                # get the text chunks
                text_chunks = get_text_chunks(raw_text)

                # create vector store
                vectorstore = get_vectorstore(text_chunks)

                # create conversation chain
                st.session_state.conversation = get_conversation_chain(vectorstore)

if __name__ == '__main__':
    main()
app.py of a project im trying to run but getting error 
requests.exceptions.SSLError: (MaxRetryError("HTTPSConnectionPool(host='huggingface.co', port=443): Max retries exceeded with url: /hkunlp/instructor-xl/resolve/main/adapter_config.json (Caused by SSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1018)')))"), '(Request ID: 6e4177ac-98b2-4ae2-8fbe-775b98568f7b)')
Traceback:
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/streamlit/runtime/scriptrunner/exec_code.py", line 121, in exec_func_with_error_handling
    result = func()
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/streamlit/runtime/scriptrunner/script_runner.py", line 591, in code_to_exec
    exec(code, module.__dict__)
    ~~~~^^^^^^^^^^^^^^^^^^^^^^^
File "/Users/achhab16/Desktop/ask-multiple-pdfs/app.py", line 102, in <module>
    main()
    ~~~~^^
File "/Users/achhab16/Desktop/ask-multiple-pdfs/app.py", line 96, in main
    vectorstore = get_vectorstore(text_chunks)
File "/Users/achhab16/Desktop/ask-multiple-pdfs/app.py", line 39, in get_vectorstore
    model = SentenceTransformer("hkunlp/instructor-xl")
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/sentence_transformers/SentenceTransformer.py", line 320, in __init__
    modules = self._load_auto_model(
        model_name_or_path,
    ...<7 lines>...
        config_kwargs=config_kwargs,
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/sentence_transformers/SentenceTransformer.py", line 1538, in _load_auto_model
    transformer_model = Transformer(
        model_name_or_path,
    ...<4 lines>...
        backend=self.backend,
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/sentence_transformers/models/Transformer.py", line 80, in __init__
    config, is_peft_model = self._load_config(model_name_or_path, cache_dir, backend, config_args)
                            ~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/sentence_transformers/models/Transformer.py", line 121, in _load_config
    find_adapter_config_file(
    ~~~~~~~~~~~~~~~~~~~~~~~~^
        model_name_or_path,
        ^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        local_files_only=config_args.get("local_files_only", False),
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/transformers/utils/peft_utils.py", line 88, in find_adapter_config_file
    adapter_cached_filename = cached_file(
        model_id,
    ...<12 lines>...
        _raise_exceptions_for_connection_errors=False,
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/transformers/utils/hub.py", line 403, in cached_file
    resolved_file = hf_hub_download(
        path_or_repo_id,
    ...<10 lines>...
        local_files_only=local_files_only,
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/utils/_validators.py", line 114, in _inner_fn
    return fn(*args, **kwargs)
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/file_download.py", line 860, in hf_hub_download
    return _hf_hub_download_to_cache_dir(
        # Destination
    ...<14 lines>...
        force_download=force_download,
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/file_download.py", line 923, in _hf_hub_download_to_cache_dir
    (url_to_download, etag, commit_hash, expected_size, head_call_error) = _get_metadata_or_catch_error(
                                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^
        repo_id=repo_id,
        ^^^^^^^^^^^^^^^^
    ...<10 lines>...
        relative_filename=relative_filename,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/file_download.py", line 1374, in _get_metadata_or_catch_error
    metadata = get_hf_file_metadata(
        url=url, proxies=proxies, timeout=etag_timeout, headers=headers, token=token
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/utils/_validators.py", line 114, in _inner_fn
    return fn(*args, **kwargs)
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/file_download.py", line 1294, in get_hf_file_metadata
    r = _request_wrapper(
        method="HEAD",
    ...<5 lines>...
        timeout=timeout,
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/file_download.py", line 278, in _request_wrapper
    response = _request_wrapper(
        method=method,
    ...<2 lines>...
        **params,
    )
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/file_download.py", line 301, in _request_wrapper
    response = get_session().request(method=method, url=url, **params)
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/requests/sessions.py", line 589, in request
    resp = self.send(prep, **send_kwargs)
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/requests/sessions.py", line 703, in send
    r = adapter.send(request, **kwargs)
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/huggingface_hub/utils/_http.py", line 93, in send
    return super().send(request, *args, **kwargs)
           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^
File "/Users/achhab16/Desktop/ask-multiple-pdfs/venv/lib/python3.13/site-packages/requests/adapters.py", line 698, in send
    raise SSLError(e, request=request)
pls fix

