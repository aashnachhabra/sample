import React from "react";
import Upload from "./Upload";
import Chat from "./Chat";
const App = () => {
   return (
<div>
<h1>PDF/JSON Chatbot</h1>
<Upload />
<Chat />
</div>
   );
};
export default App;

import React, { useState } from "react";
import axios from "axios";
const Chat = () => {
   const [query, setQuery] = useState("");
   const [response, setResponse] = useState("");
   const handleSendMessage = async () => {
       try {
           const res = await axios.post("http://127.0.0.1:8000/chat/", {
               query: query,
           });
           setResponse(res.data.response);
       } catch (error) {
           console.error("Chat error:", error);
           setResponse("Failed to fetch response.");
       }
   };
   return (
<div>
<input
               type="text"
               value={query}
               onChange={(e) => setQuery(e.target.value)}
               placeholder="Ask a question..."
           />
<button onClick={handleSendMessage}>Send</button>
<p>Response: {response}</p>
</div>
   );
};
export default Chat;

import React, { useState } from "react";
import axios from "axios";
const Upload = ({ onUploadSuccess }) => {
   const [selectedFiles, setSelectedFiles] = useState([]);
   const [message, setMessage] = useState("");
   const [docsUploaded, setDocsUploaded] = useState(false);
   const [jsonFetched, setJsonFetched] = useState(false);
   const handleFileChange = (event) => {
       setSelectedFiles(event.target.files);
   };
   const handleUpload = async () => {
       if (!selectedFiles.length) {
           setMessage("❌ Please select at least one file.");
           return;
       }
       const formData = new FormData();
       for (let i = 0; i < selectedFiles.length; i++) {
           formData.append("files", selectedFiles[i]);
       }
       try {
           const response = await axios.post("http://127.0.0.1:8000/upload/", formData, {
               headers: { "Content-Type": "multipart/form-data" },
           });
           setMessage(`✅ Files uploaded successfully: ${response.data.uploaded_files.join(", ")}`);
           setDocsUploaded(true);
           setJsonFetched(false);  // Reset JSON fetch status
           onUploadSuccess && onUploadSuccess(true);  // Callback to update parent component
       } catch (error) {
           console.error("Upload error:", error);
           setMessage("❌ Failed to upload files.");
           setDocsUploaded(false);
       }
   };
   const fetchJsonFromMongo = async () => {
       try {
           const response = await axios.get("http://127.0.0.1:8000/fetch-json/");
           if (response.data.json_data) {
               setMessage(`✅ Fetched ${response.data.json_data.length} JSON documents from MongoDB.`);
               setJsonFetched(true);
               setDocsUploaded(false);  // Reset uploaded documents status
               onUploadSuccess && onUploadSuccess(true);  // Callback for successful fetch
           } else {
               setMessage("⚠️ No JSON data found in MongoDB.");
               setJsonFetched(false);
           }
       } catch (error) {
           console.error("Fetch JSON error:", error);
           setMessage("❌ Failed to fetch JSON data from MongoDB.");
           setJsonFetched(false);
       }
   };
   return (
<div>
<input type="file" multiple onChange={handleFileChange} />
<button onClick={handleUpload}>Upload Files</button><p> or </p>
<button onClick={fetchJsonFromMongo}>Fetch JSON from MongoDB</button>
<p>{message}</p>
           {/* {docsUploaded && <p>✅ Documents uploaded successfully. You can now ask queries.</p>}
           {jsonFetched && <p>✅ JSON data fetched successfully. You can now ask queries.</p>} */}
</div>
   );
};
export default Upload;

this is my frontend code for a chatbot, please create a beautiful and unique frontend for my frontend but keep the functionality intact
