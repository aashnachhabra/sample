	private List<PlDedPdpdIdDTO> savePLDed(String benefitIndicator, Double individualDed, Double familyDed, MedicalDeductible medDeductObj, String userName, int tierNumber, List<PlDedPdpdIdDTO> medDedList, String pdpdId) {
		if (individualDed != null && familyDed != null) {
			PlDedPdpdIdDTO plDedPdpdIdDTO = new PlDedPdpdIdDTO();
			PlDed plDed = new PlDed();
			plDed.setEmbeddedType(medDeductObj.getEmbeddedType());
			plDed.setRxDedType(medDeductObj.getRxDedType());
			plDed.setCrossApplies(medDeductObj.getCrossApplies());
			if(null != medDeductObj.getCarryover() && !medDeductObj.getCarryover().trim().isEmpty())plDed.setCarryover(Integer.parseInt(medDeductObj.getCarryover()));
			plDed.setTierNumber(tierNumber);
			plDed.setIndividualDed(individualDed.intValue());
			plDed.setFamilyDed(familyDed.intValue());
			plDed.setCreatedBy(userName);
			plDed.setBenefitIndicator(benefitIndicator);
			plDed.setCreatedOn(DateUtil.getCurrentDateToFormat("yyyy-MM-dd HH:mm:ss"));
			plDed.setIsCurrent(Constants.ISCURRENT);
			plDedPdpdIdDTO.setPlDed(plDed);
			plDedPdpdIdDTO.setPdpdId(pdpdId);
			medDedList.add(plDedPdpdIdDTO);
		}
		return medDedList;
	}

this is save pl ded you can create a similar function for this condition
