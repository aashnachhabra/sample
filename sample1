i have some ui components i want to improve them and make them more professional beautiful and united health group ui appropriate
https://www.uhcprovider.com/en/resource-library.html
u can refer to this html for the referenences
i am attaching the frontend code files below please modify and make them better using tailwind also and for excel i want to use react-spreadsheet and make it more beautiful
import React from 'react';
import { BrowserRouter as Router, Routes, Route } from 'react-router-dom';
import UploadForm from './components/UploadForm';
import ExcelViewer from './components/ExcelViewer';
function App() {
 return (
<Router>
<Routes>
<Route path="/" element={<UploadForm />} />
<Route path="/results" element={<ExcelViewer />} />
</Routes>
</Router>
 );
}
export default App;
import React, { useState } from "react";

import axios from "axios";

import { useNavigate } from "react-router-dom";

function UploadForm() {
  const [file, setFile] = useState(null);
  const [llmEndpoint, setLlmEndpoint] = useState("");
  const [threshold, setThreshold] = useState(0.7);
  const [loading, setLoading] = useState(false);
  const navigate = useNavigate();
  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!file || !llmEndpoint) {
      alert("All fields are required");

      return;
    }
    const formData = new FormData();
    formData.append("file", file);
    formData.append("llmEndpoint", llmEndpoint);
    formData.append("threshold", threshold);

    try {
      setLoading(true);

      const res = await axios.post("http://localhost:5000/process", formData, {
        responseType: "blob",
      });

      const blob = new Blob([res.data]);

      const fileURL = URL.createObjectURL(blob);

      navigate("/results", { state: { fileURL } });
    } catch (err) {
      alert("Something went wrong.");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-100 flex items-center justify-center px-4">
      <div className="bg-white shadow-lg rounded-xl p-8 w-full max-w-xl">
        <h2 className="text-2xl font-bold text-center mb-6 text-gray-700">
          DeepEval Testing 
        </h2>
        <form onSubmit={handleSubmit} className="space-y-4">
          <div>
            <label className="block text-gray-600 font-medium mb-1">
              Upload Excel
            </label>
            <input
              type="file"
              accept=".xlsx"
              onChange={(e) => setFile(e.target.files[0])}
              className="w-full border border-gray-300 rounded-lg px-3 py-2"
            />
          </div>
          <div>
            <label className="block text-gray-600 font-medium mb-1">
              LLM Endpoint
            </label>
            <input
              type="text"
              value={llmEndpoint}
              onChange={(e) => setLlmEndpoint(e.target.value)}
              className="w-full border border-gray-300 rounded-lg px-3 py-2"
            />
          </div>
          <div>
            <label className="block text-gray-600 font-medium mb-1">
              Threshold (0 - 1)
            </label>
            <input
              type="number"
              min="0"
              max="1"
              step="0.01"
              value={threshold}
              onChange={(e) => setThreshold(e.target.value)}
              className="w-full border border-gray-300 rounded-lg px-3 py-2"
            />
          </div>
          <button
            type="submit"
            className="w-full bg-blue-600 text-white py-2 rounded-lg hover:bg-blue-700 transition"
            disabled={loading}
          >
            {loading ? "Processing..." : "Submit"}
          </button>
        </form>
      </div>
    </div>
  );
}

export default UploadForm;

import React, { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import * as XLSX from "xlsx";
import { HotTable } from "@handsontable/react";
import "handsontable/dist/handsontable.full.min.css";

function ExcelViewer() {
  const location = useLocation();
  const [data, setData] = useState([]);
  const [columns, setColumns] = useState([]);
  const [downloadUrl, setDownloadUrl] = useState("");

  useEffect(() => {
    if (!location.state?.fileURL) return;

    const fetchExcel = async () => {
      const res = await fetch(location.state.fileURL);
      const blob = await res.blob();
      setDownloadUrl(location.state.fileURL);

      const reader = new FileReader();
      reader.onload = (e) => {
        const workbook = XLSX.read(e.target.result, { type: "binary" });
        const worksheet = workbook.Sheets[workbook.SheetNames[0]];
        const jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
        const headers = jsonData[0]?.map((h) => ({ title: h })) || [];
        setColumns(headers);
        setData(jsonData.slice(1));
      };
      reader.readAsBinaryString(blob);
    };

    fetchExcel();
  }, [location]);

  return (
    <div className="min-h-screen bg-gray-50 px-4 py-10">
      <div className="w-full h-full">
        <div className="flex justify-between items-center mb-6 px-2">
          <h2 className="text-2xl font-semibold text-gray-800">Evaluation Results</h2>
          {downloadUrl && (
            <a
              href={downloadUrl}
              download="deepeval_results.xlsx"
              className="bg-green-600 text-white px-4 py-2 rounded-md hover:bg-green-700 transition"
            >
              Download
            </a>
          )}
        </div>
        <div className="bg-white border border-gray-200 rounded-md shadow overflow-auto h-full">
          <HotTable
            data={data}
            colHeaders={columns.map((col) => col.title)}
            rowHeaders={true}
            stretchH="all"
            colWidths={columns.length ? window.innerWidth / columns.length : 100}
            width="100%"
            height="calc(100vh - 150px)"
            className="htCenter"
            licenseKey="non-commercial-and-evaluation"
            manualColumnResize={true}
            manualRowResize={true}
          />
        </div>
      </div>
    </div>
  );
}

export default ExcelViewer;
.custom-table .htCore thead th {
    background-color: #4caf50;
    color: white;
    font-weight: bold;
    text-align: center;
    border: 1px solid #ddd;
  }
  
  .custom-table .htCore tbody td {
    border: 1px solid #ddd;
    padding: 8px;
    text-align: center;
  }
  
  .custom-table .htCore tbody tr:nth-child(even) {
    background-color: #f2f2f2;
  }
  
  .custom-table .htCore tbody tr:hover {
    background-color: #ddd;
  }
  
  .custom-table .htCore {
    border-collapse: collapse;
    width: 100%;
  }
/* General page styles */
body {
    background-color: #f0f2f5;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin: 0;
    padding: 0;
   }
   /* Centered card layout for upload form */
   .card {
    max-width: 600px;
    margin: 60px auto;
    border-radius: 12px;
    border: none;
    background-color: #ffffff;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
   }
   /* Header styling */
   h3 {
    font-weight: 700;
    color: #333;
    text-align: center;
   }
   /* Form label styling */
   .form-label {
    font-weight: 500;
    color: #555;
   }
   /* Submit button style */
   .btn-primary {
    background-color: #0056b3;
    border-color: #004999;
   }
   .btn-primary:hover {
    background-color: #004999;
   }
   /* Result page styles */
   .container {
    margin-top: 40px;
    margin-bottom: 60px;
   }
   /* Download button */
   .btn-success {
    background-color: #28a745;
    border-color: #218838;
   }
   .btn-success:hover {
    background-color: #218838;
   }
   /* Handsontable custom styling */
   .ht_master .htCore {
    border: 1px solid #dee2e6;
    border-radius: 6px;
    font-size: 14px;
    background-color: #fff;
   }
   /* Add subtle striped effect */
   .ht_master tr:nth-child(even) {
    background-color: #f9f9f9;
   }
   /* Header styling */
   .ht_clone_top th {
    background-color: #e9ecef;
    font-weight: bold;
    color: #333;
   }
   /* Responsive table container */
   .handsontable {
    overflow-x: auto;
    max-width: 100%;
   }
   /* Adjust scroll appearance */
   .ht_master .wtHolder {
    overflow: auto !important;
    max-height: 600px;
    border-radius: 8px;
   }
also i want a uhg navbar on top of every page i have not added it yet how to do? the code is below
import React from 'react';
import uhcLogo from './assets/UHC_Lockup_wht_RGB.png';
 
const Navbar = () => {
 const handleHomeClick = (e) => {
   e.preventDefault();
   // Replace this with actual releaseLock() if needed
   window.location.href = "/home";
 };
 return (
<div className="w-full bg-blue-900 text-white shadow-md px-4 py-2 flex flex-wrap items-center justify-between">
     {/* Logo */}
<a onClick={handleHomeClick} href="/home" className="flex items-center cursor-pointer">
<img
         src={uhcLogo}
         alt="UHC Logo"
         width="150"
         height="50"
         className="object-contain"
       />
</a>
<div className="flex items-center space-x-2 mt-2 md:mt-0">
</div>
</div>
 );
};
export default Navbar;



