package com.optum.eni.core.rules.engine.config;

import org.apache.commons.lang3.StringUtils;
import org.apache.http.HttpHost;
import org.apache.http.auth.AuthScope;
import org.apache.http.auth.UsernamePasswordCredentials;
import org.apache.http.client.CredentialsProvider;
import org.apache.http.client.config.RequestConfig;
import org.apache.http.impl.client.BasicCredentialsProvider;
import org.apache.http.impl.nio.client.HttpAsyncClientBuilder;
import org.elasticsearch.client.RestClient;
import org.elasticsearch.client.RestClientBuilder;
import org.elasticsearch.client.RestHighLevelClient;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.core.env.Environment;
import org.springframework.data.elasticsearch.core.ElasticsearchOperations;
import org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate;
import org.springframework.data.elasticsearch.repository.config.EnableElasticsearchRepositories;

@Configuration
@EnableElasticsearchRepositories(basePackages = "com.optum.eni.core.rules.engine.elasticlibrary")
@ComponentScan(basePackages = { "com.optum.eni.core.rules.engine.elasticlibrary" })
public class ElasticConfiguration {

	@Autowired
	private Environment environment;


	@Bean
	public RestHighLevelClient client() {

    	String host = environment.getProperty("elasticsearch.host");

	    String portString = environment.getProperty("elasticsearch.port");

		String userName = environment.getProperty("elasticsearch.userName");

	    String password = environment.getProperty("elasticsearch.password");

		int port = 9300;

		if (!StringUtils.isEmpty(portString)) {
			port = Integer.valueOf(portString);
		}

		final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();
		credentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(userName, password));

		RestClientBuilder builder = RestClient.builder(new HttpHost(host, port))
				.setRequestConfigCallback(new RestClientBuilder.RequestConfigCallback() {
					@Override
					public RequestConfig.Builder customizeRequestConfig(RequestConfig.Builder requestConfigBuilder) {
						return requestConfigBuilder.setConnectTimeout(5000).setSocketTimeout(60000);
					}
				}).setHttpClientConfigCallback(new RestClientBuilder.HttpClientConfigCallback()
					 {

					 @Override public HttpAsyncClientBuilder
					 customizeHttpClient(HttpAsyncClientBuilder httpClientBuilder) { return
					 httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider); } });

		return new RestHighLevelClient(builder);
	}

	@Bean
	public ElasticsearchOperations elasticsearchTemplate() {
		return new ElasticsearchRestTemplate(client());
	}

}
error: cannot find symbol line import org.springframework.data.elasticsearch.core.ElasticsearchRestTemplate;
pom 
<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-elasticsearch</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-high-level-client</artifactId>
			<version>7.17.10</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch.client</groupId>
			<artifactId>elasticsearch-rest-client</artifactId>
			<version>7.17.10</version>
		</dependency>
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.4</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.optum</groupId>
	<artifactId>core-rules-engine</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>core-rules-engine</name>
	<description>core-rules-engine application</description>
	<properties>
		<java.version>17</java.version>
		<maven-jar-plugin.version>3.1.1</maven-jar-plugin.version>
		<avro.version>1.12.0</avro.version>
		<confluent.version>7.4.0</confluent.version>
		<groovy.version>4.0.21</groovy.version>
	</properties>

	<repositories>
		<repository>
			<id>confluent</id>
			<url>https://packages.confluent.io/maven/</url>
		</repository>
	</repositories>

